# Generated by Django 5.0.2 on 2025-06-18 16:14

import django.db.models.deletion
import djmoney.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'product_attributes',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('input_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('select', 'Select'), ('multiselect', 'Multi Select'), ('boolean', 'Yes/No'), ('color', 'Color'), ('size', 'Size')], max_length=15)),
                ('is_required', models.BooleanField(default=False)),
                ('is_variant_attribute', models.BooleanField(default=False)),
                ('options', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'product_attribute_types',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'product_images',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('size', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(blank=True, max_length=50)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'product_variants',
            },
        ),
        migrations.CreateModel(
            name='ProductVariantAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'product_variant_attributes',
            },
        ),
        migrations.CreateModel(
            name='ProductVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='products/videos/')),
                ('thumbnail', models.ImageField(blank=True, upload_to='products/video_thumbnails/')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'product_videos',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='products.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'collections',
                'indexes': [models.Index(fields=['name'], name='collections_name_2c2ce2_idx'), models.Index(fields=['slug'], name='collections_slug_f91862_idx'), models.Index(fields=['is_active'], name='collections_is_acti_b65401_idx')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=220, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('base_price_currency', djmoney.models.fields.CurrencyField(choices=[('BDT', 'Bangladeshi Taka'), ('USD', 'US Dollar')], default='BDT', editable=False, max_length=3)),
                ('base_price', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=10)),
                ('compare_price_currency', djmoney.models.fields.CurrencyField(choices=[('BDT', 'Bangladeshi Taka'), ('USD', 'US Dollar')], default='BDT', editable=False, max_length=3, null=True)),
                ('compare_price', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_price_currency', djmoney.models.fields.CurrencyField(choices=[('BDT', 'Bangladeshi Taka'), ('USD', 'US Dollar')], default='BDT', editable=False, max_length=3, null=True)),
                ('cost_price', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('storeId', models.IntegerField(blank=True, null=True)),
                ('availableSizes', models.JSONField(blank=True, default=list)),
                ('availableColors', models.JSONField(blank=True, default=list)),
                ('features', models.JSONField(blank=True, default=list)),
                ('offers_custom_sizes', models.BooleanField(default=False)),
                ('custom_size_fields', models.JSONField(blank=True, default=list)),
                ('requires_advance_payment', models.BooleanField(default=False)),
                ('estimated_pickup_days', models.PositiveIntegerField(default=3)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('out_of_stock', 'Out of Stock')], default='active', max_length=15)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_digital', models.BooleanField(default=False)),
                ('track_inventory', models.BooleanField(default=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('low_stock_threshold', models.PositiveIntegerField(default=5)),
                ('requires_shipping', models.BooleanField(default=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('shipping_days_min', models.PositiveIntegerField(default=1)),
                ('shipping_days_max', models.PositiveIntegerField(default=7)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('sales_count', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.collection')),
            ],
            options={
                'db_table': 'products',
            },
        ),
    ]
